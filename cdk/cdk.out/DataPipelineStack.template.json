{
 "Resources": {
  "DataBucketE3889A50": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/DataBucket/Resource"
   }
  },
  "AthenaResultsBucket879938FA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/AthenaResultsBucket/Resource"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/LambdaExecutionRole/Resource"
   }
  },
  "LambdaExecutionRoleDefaultPolicy6D69732F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ExtractorLambdaA121D062": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-593695448123-us-east-1",
     "S3Key": "858487b2a04b224ce5f4272a2177b74ffc1ac736ae948da4671f54ed2031a055.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "DataBucketE3889A50"
      },
      "PREFIX": "raw/",
      "API_URL": "https://randomuser.me/api/?results=100"
     }
    },
    "Handler": "lambda_function.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "python3.10",
    "Timeout": 60
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/ExtractorLambda/Resource",
    "aws:asset:path": "asset.858487b2a04b224ce5f4272a2177b74ffc1ac736ae948da4671f54ed2031a055",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GlueDatabase": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": "593695448123",
    "DatabaseInput": {
     "Name": "users_db"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/GlueDatabase"
   }
  },
  "GlueCrawlerRole4AA4B387": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "glue.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSGlueServiceRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/GlueCrawlerRole/Resource"
   }
  },
  "GlueCrawlerRoleDefaultPolicy44958AC9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GlueCrawlerRoleDefaultPolicy44958AC9",
    "Roles": [
     {
      "Ref": "GlueCrawlerRole4AA4B387"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/GlueCrawlerRole/DefaultPolicy/Resource"
   }
  },
  "UsersCrawler": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "DatabaseName": {
     "Ref": "GlueDatabase"
    },
    "Role": {
     "Fn::GetAtt": [
      "GlueCrawlerRole4AA4B387",
      "Arn"
     ]
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "DataBucketE3889A50",
            "Arn"
           ]
          },
          "/raw/"
         ]
        ]
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/UsersCrawler"
   }
  },
  "AthenaWorkgroup": {
   "Type": "AWS::Athena::WorkGroup",
   "Properties": {
    "Name": "users_workgroup",
    "WorkGroupConfiguration": {
     "ResultConfiguration": {
      "OutputLocation": {
       "Fn::Join": [
        "",
        [
         "s3://",
         {
          "Ref": "AthenaResultsBucket879938FA"
         },
         "/athena-results/"
        ]
       ]
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/AthenaWorkgroup"
   }
  },
  "GlueCrawlerLFPermissions": {
   "Type": "AWS::LakeFormation::Permissions",
   "Properties": {
    "DataLakePrincipal": {
     "DataLakePrincipalIdentifier": {
      "Fn::GetAtt": [
       "GlueCrawlerRole4AA4B387",
       "Arn"
      ]
     }
    },
    "Permissions": [
     "CREATE_TABLE",
     "ALTER",
     "DESCRIBE"
    ],
    "Resource": {
     "DatabaseResource": {
      "Name": "users_db"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/GlueCrawlerLFPermissions"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/zWMwW6DMBAFvyV3s03g1GND1R6LyKHHaHEW4mLsyLsWiiz/e2VoT/OeRpoa6tMrHA+4cqVvc2XNAOkiqGeFK18TN5DOUc8kqh3d39pxRqasDC6Qem+p+I2dt0Y/y91XVhaX4YaQPqLTYrwr7n9nxc0VmUkY3grUZCNBakf3joID8lZuA66WQlYod3II7ei+fZg/g48PZXGm0YcFS7CojsJimI13nFVP7GPQpLb8RXAybirNryiPKFl1T7l799LAqYbT8fDDxlQhOjELQb/zF/kIhK4nAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "DataBucketName": {
   "Value": {
    "Ref": "DataBucketE3889A50"
   }
  },
  "GlueDatabaseName": {
   "Value": {
    "Ref": "GlueDatabase"
   }
  },
  "AthenaResultsBucketName": {
   "Value": {
    "Ref": "AthenaResultsBucket879938FA"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}