{
 "Resources": {
  "DataBucketE3889A50": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/DataBucket/Resource"
   }
  },
  "DataBucketPolicy3231C704": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "DataBucketE3889A50"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/DataBucket/Policy/Resource"
   }
  },
  "DataBucketAutoDeleteObjectsCustomResource9FB51BF3": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "DataBucketE3889A50"
    }
   },
   "DependsOn": [
    "DataBucketPolicy3231C704"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/DataBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-339712743071-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "DataBucketE3889A50"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "AthenaResults99A60126": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/AthenaResults/Resource"
   }
  },
  "AthenaResultsPolicyC1D66A19": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AthenaResults99A60126"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AthenaResults99A60126",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AthenaResults99A60126",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/AthenaResults/Policy/Resource"
   }
  },
  "AthenaResultsAutoDeleteObjectsCustomResourceF81C6624": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AthenaResults99A60126"
    }
   },
   "DependsOn": [
    "AthenaResultsPolicyC1D66A19"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/AthenaResults/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "DepsLayerA0D7F79A": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleArchitectures": [
     "arm64"
    ],
    "CompatibleRuntimes": [
     "python3.12"
    ],
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-339712743071-us-east-1",
     "S3Key": "eda857b3f450629a8bff9fd366846b2ee6bdb013772947361f1cc0e41fa78249.zip"
    },
    "Description": "Prebuilt deps (requests, pyarrow, etc.)"
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/DepsLayer/Resource",
    "aws:asset:path": "asset.eda857b3f450629a8bff9fd366846b2ee6bdb013772947361f1cc0e41fa78249.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "LambdaRole3A44B857": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/LambdaRole/Resource"
   }
  },
  "LambdaRoleDefaultPolicy75625A82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaRoleDefaultPolicy75625A82",
    "Roles": [
     {
      "Ref": "LambdaRole3A44B857"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/LambdaRole/DefaultPolicy/Resource"
   }
  },
  "ExtractorFunctionBA5D720D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-339712743071-us-east-1",
     "S3Key": "bb7161eed68f1faf61352d89ae3eaa63c4cb7af0c20beac845a9c8eefbd0e020.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "DataBucketE3889A50"
      },
      "API_URL": "https://randomuser.me/api/?results=100",
      "FILE_FORMAT": "parquet"
     }
    },
    "Handler": "lambda_function.handler",
    "Layers": [
     {
      "Ref": "DepsLayerA0D7F79A"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/ExtractorFunction/Resource",
    "aws:asset:path": "asset.bb7161eed68f1faf61352d89ae3eaa63c4cb7af0c20beac845a9c8eefbd0e020",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GlueDB": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": "339712743071",
    "DatabaseInput": {
     "Name": "users_db"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/GlueDB"
   }
  },
  "CrawlerRoleA9495AEE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "glue.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AdministratorAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/CrawlerRole/Resource"
   }
  },
  "CrawlerRoleDefaultPolicy145A4322": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CrawlerRoleDefaultPolicy145A4322",
    "Roles": [
     {
      "Ref": "CrawlerRoleA9495AEE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/CrawlerRole/DefaultPolicy/Resource"
   }
  },
  "DataPipelineDataLakeSettings": {
   "Type": "AWS::LakeFormation::DataLakeSettings",
   "Properties": {
    "Admins": [
     {
      "DataLakePrincipalIdentifier": {
       "Fn::GetAtt": [
        "CrawlerRoleA9495AEE",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/DataPipelineDataLakeSettings"
   }
  },
  "GlueDBPerms": {
   "Type": "AWS::LakeFormation::Permissions",
   "Properties": {
    "DataLakePrincipal": {
     "DataLakePrincipalIdentifier": {
      "Fn::GetAtt": [
       "CrawlerRoleA9495AEE",
       "Arn"
      ]
     }
    },
    "Permissions": [
     "CREATE_TABLE",
     "ALTER",
     "DESCRIBE"
    ],
    "Resource": {
     "DatabaseResource": {
      "Name": "users_db"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/GlueDBPerms"
   }
  },
  "UsersCrawler": {
   "Type": "AWS::Glue::Crawler",
   "Properties": {
    "DatabaseName": {
     "Ref": "GlueDB"
    },
    "Role": {
     "Fn::GetAtt": [
      "CrawlerRoleA9495AEE",
      "Arn"
     ]
    },
    "SchemaChangePolicy": {
     "DeleteBehavior": "LOG",
     "UpdateBehavior": "UPDATE_IN_DATABASE"
    },
    "Targets": {
     "S3Targets": [
      {
       "Path": {
        "Fn::Join": [
         "",
         [
          "s3://",
          {
           "Ref": "DataBucketE3889A50"
          },
          "/"
         ]
        ]
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/UsersCrawler"
   }
  },
  "LFDataLocation": {
   "Type": "AWS::LakeFormation::Resource",
   "Properties": {
    "ResourceArn": {
     "Fn::GetAtt": [
      "DataBucketE3889A50",
      "Arn"
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "CrawlerRoleA9495AEE",
      "Arn"
     ]
    },
    "UseServiceLinkedRole": false
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/LFDataLocation"
   }
  },
  "CrawlerPerms": {
   "Type": "AWS::LakeFormation::Permissions",
   "Properties": {
    "DataLakePrincipal": {
     "DataLakePrincipalIdentifier": {
      "Fn::GetAtt": [
       "CrawlerRoleA9495AEE",
       "Arn"
      ]
     }
    },
    "Permissions": [
     "ALL"
    ],
    "Resource": {
     "DatabaseResource": {
      "Name": "users_db"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/CrawlerPerms"
   }
  },
  "CrawlerPermst": {
   "Type": "AWS::LakeFormation::Permissions",
   "Properties": {
    "DataLakePrincipal": {
     "DataLakePrincipalIdentifier": {
      "Fn::GetAtt": [
       "CrawlerRoleA9495AEE",
       "Arn"
      ]
     }
    },
    "Permissions": [
     "DATA_LOCATION_ACCESS"
    ],
    "Resource": {
     "DataLocationResource": {
      "S3Resource": {
       "Fn::GetAtt": [
        "DataBucketE3889A50",
        "Arn"
       ]
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/CrawlerPermst"
   }
  },
  "LambdaPerms": {
   "Type": "AWS::LakeFormation::Permissions",
   "Properties": {
    "DataLakePrincipal": {
     "DataLakePrincipalIdentifier": {
      "Fn::GetAtt": [
       "LambdaRole3A44B857",
       "Arn"
      ]
     }
    },
    "Permissions": [
     "DATA_LOCATION_ACCESS"
    ],
    "Resource": {
     "DataLocationResource": {
      "S3Resource": {
       "Fn::GetAtt": [
        "DataBucketE3889A50",
        "Arn"
       ]
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/LambdaPerms"
   }
  },
  "AthenaWG": {
   "Type": "AWS::Athena::WorkGroup",
   "Properties": {
    "Name": "users_wg",
    "WorkGroupConfiguration": {
     "ResultConfiguration": {
      "OutputLocation": {
       "Fn::Join": [
        "",
        [
         "s3://",
         {
          "Ref": "AthenaResults99A60126"
         },
         "/results/"
        ]
       ]
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/AthenaWG"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11Qy26DMBD8ltyNG+DUY0PVXCIVgdQeowUW4gJ25F0XIcS/VwbSpD3NjHfG+4hkFD7L/Q4GCsqqDTpVyClnKFsBA50niuV0cGWLLJJab2yF1HSqHO/Pm17FAQhn0UFfVCCnE4xoP9CSMtoH/ug3p0veCjc+C4rPQIRM8sWDUNDLKTMdetuC9/4rm0XTOZRTUutXYCiAFm9iYejQ+mFarI3twTf4tZ2gxRyZlW5o+Qttr8gPtsgMyThb4iyAL6hBJrX+NLY9WuOus0gcselvpsfAv1Jqzbeq0Pq7iGWjnKFRuhGP4XfHV8ezSEe+GP0UyzCS4X73RUoF1mlWPcpsxR9UgZgtuQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DataPipelineStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "DataBucketNameOutput": {
   "Value": {
    "Ref": "DataBucketE3889A50"
   }
  },
  "GlueDBNameOutput": {
   "Value": "users_db"
  },
  "LambdaNameOutput": {
   "Value": {
    "Ref": "ExtractorFunctionBA5D720D"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}